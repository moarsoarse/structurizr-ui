<div class="modal fade" id="perspectivesModal" tabindex="-1" aria-labelledby="perspectivesModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="perspectivesModalLabel">Perspectives</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>
                    The perspectives included in the software architecture model are listed below.
                    Viewing a diagram with a particular perspective will highlight all elements and relationships that have content for that perspective.
                    See <a href="https://docs.structurizr.com/ui/diagrams/perspectives" target="_blank">Help - Diagrams - Perspectives</a> for more details.
                </p>

                <div class="form-group">
                    <select class="form-control" id="perspectivesList"></select>
                </div>
            </div>
            <div class="modal-footer">
                <button id="clearPerspectiveButton" type="button" class="btn btn-primary" data-bs-dismiss="modal" >Clear perspective</button>
            </div>
        </div>
    </div>
</div>

<script nonce="${scriptNonce}">

    $('#clearPerspectiveButton').click(function() { clearPerspective(true); });

    $('#perspectivesList').change(function() {
        showPerspective();
    });


    function clearPerspective(render) {
        $('#perspectivesList').val('');
        structurizr.diagram.clearPerspective();
        tooltip.enable();
        toggleTooltip();


        if ($('#perspectivesList > option').length > 0) {
            $('#perspectivesOnButton').removeClass('d-none');
        }

        $('#perspectivesOffButton').addClass('d-none');
        $('#perspectivesOffButton').attr('title', 'Perspectives');

        if (render === true) {
            structurizr.diagram.renderPerspectiveOrTagsFilter();
        }
    }

    function showPerspective() {
        clearTags(false);
        var perspective = $('#perspectivesList').val();
        structurizr.diagram.changePerspective(perspective);
        structurizr.diagram.renderPerspectiveOrTagsFilter();
        tooltip.disable();
        toggleTooltip();

        $('#perspectivesOnButton').addClass('d-none');
        $('#perspectivesOffButton').removeClass('d-none');
        $('#perspectivesOffButton').attr('title', 'Perspective: ' + perspective);
    }

    function initPerspectives() {
        const perspectiveNames = structurizr.workspace.getPerspectiveNames();
        const perspectivesList = $('#perspectivesList');
        perspectivesList.empty();

        if (perspectiveNames.length > 0) {
            perspectiveNames.forEach(function (perspectiveName) {
                perspectivesList.append(
                    $('<option></option>').val(structurizr.util.escapeHtml(perspectiveName)).html(structurizr.util.escapeHtml(perspectiveName))
                );
            });

            perspectivesList.attr('size', Math.min(8, perspectiveNames.length));
            perspectivesList.val('');
            $('#perspectivesOnButton').removeClass('d-none');
        }
    }
</script>